}
mean(scatterresult)
median(scatterresult)
# library("dynlm")
users <- c("AS14.01", "AS14.17", "AS14.08", "AS14.13", "AS14.16", "AS14.05", "AS14.15", "AS14.12", "AS14.02", "AS14.07", "AS14.14", "AS14.20", "AS14.30", "AS14.03","AS14.09", "AS14.19", "AS14.23", "AS14.26", "AS14.06", "AS14.28", "AS14.32", "AS14.29", "AS14.27", "AS14.25", "AS14.24", "AS14.33", "AS14.31")
p <- c()
scatterresult <- c()
stationary <- c()
for (user in users){
moodList_aggregate<-aggregate(x=moodList[,5],by=list(id=moodList[,2] , day=as.character(moodList[,6])), FUN=mean)
moodList_aggregate_user<- moodList_aggregate[moodList_aggregate$id== toString(user),]
moodList_aggregate_user$day <- as.Date(moodList_aggregate_user$day)
print(paste("the user is", user))
print(ggplot(moodList_aggregate_user,aes(x=day, y=x,group = 1))+geom_line() + expand_limits(y = 0)+
geom_point() + labs(x="Day", y = "Mood")+scale_x_date(date_labels = "%b-%Y",  date_breaks="1 month"))
fulldata <- data.frame(seq(min(moodList_aggregate_user$day), max(moodList_aggregate_user$day), by="1 day"))
colnames(fulldata) <- "day"
moodList_aggregate_user <- merge(fulldata, moodList_aggregate_user, by=c("day"), all.x=TRUE)
moodList_aggregate_user$weekday<-weekdays(moodList_aggregate_user$day)
moodList_aggregate_user$weekend <- ifelse(weekdays(moodList_aggregate_user$day) %in% c("zaterdag", "zondag"), "weekend", "weekday")
moodList_aggregate_user$id <- user
for(i in 1:nrow(moodList_aggregate_user))
{
if (is.na(moodList_aggregate_user$x[i]))
{
if(!is.na(moodList_aggregate_user$x[i-1]) & !is.na(moodList_aggregate_user$x[i+1])) {
moodList_aggregate_user$x[i] <- (moodList_aggregate_user$x[i-1] + moodList_aggregate_user$x[i+1])/2
# print(paste("insert",i))
}
if(is.na(moodList_aggregate_user$x[i-1]) | is.na(moodList_aggregate_user$x[i+1]) ){
# print(paste("split komt eraan ",i))
if(!is.na(moodList_aggregate_user$x[i+1]) & i!=41){
moodList_aggregate_user <- moodList_aggregate_user[-c(1:i), ]
print("split")
#   print(paste("split komt eraan ",i))
# }
#   else{
#     if(i<nrow(moodList_aggregate_user)/2){
#       moodList_aggregate_user <- moodList_aggregate_user[-c(1:i), ]
#     }
#     else{
#       moodList_aggregate_user <- moodList_aggregate_user[-c(:nrow(moodList_aggregate_user)), ]
#     }
#   }
}
if(!is.na(moodList_aggregate_user$x[i+1]) & i==41){
moodList_aggregate_user <- moodList_aggregate_user[-c(40:nrow(moodList_aggregate_user)), ]
print("split")
}
}
}
}
for(i in 1:nrow(moodList_aggregate_user))
{
if (is.na(moodList_aggregate_user$x[i]))
{
moodList_aggregate_user$x[i] <- (moodList_aggregate_user$x[i-1] + moodList_aggregate_user$x[i+1])/2
}
}
station <- adf.test(moodList_aggregate_user$x, alternative = "stationary", k=0)
print(paste("pvalue,",station$p.value))
stationary[length(stationary)+1] <- station$p.value
#x=ur.df(moodList_aggregate_user$x,type="drift",selectlags = "AIC")
#print(summary(x))
count_d1 = diff(moodList_aggregate_user$x, differences = 1)
#plot(count_d1)
#station1 <-adf.test(count_d1, alternative = "stationary")
#stationary[length(stationary)+1] <- station1$p.value
Acf(count_d1, main='ACF for Differenced Series')
Pacf(count_d1, main='PACF for Differenced Series')
model <- auto.arima(moodList_aggregate_user$x,d = 1)
print(model)
require(forecast)
serie <- c()
serie <- moodList_aggregate_user$x
series <- list()
series[[1]] <- ts(serie, frequency=7)
holdout <- round(length(moodList_aggregate_user$x)*0.10)
forecasts <- lapply(series,function(foo) {
subseries <- ts(head(foo,length(foo)-holdout),start=start(foo),frequency=frequency(foo))
forecast(auto.arima(subseries, d=1),h=holdout)
})
result <- mapply(FUN=accuracy,f=forecasts,x=series,SIMPLIFY=FALSE)
print(sapply(result,"[","Test set","RMSE"))
scatterresult[length(scatterresult)+1]=sapply(result,"[","Test set","RMSE")
}
median(scatterresult)
median(scatterresult)
mean(scatterresult)
hist(scatterresult,
main="RMSE of the linear regression",
xlab="RMSE",
border="black",
col="red",
xlim=c(0.0,1.2),
las=1,
breaks=9)
hist(scatterresult,
main="RMSE of the linear regression",
xlab="RMSE",
border="black",
col="red",
xlim=c(0.0,1.4),
las=1,
breaks=9)
user
user <- "AS14.24"
moodList_aggregate<-aggregate(x=moodList[,5],by=list(id=moodList[,2] , day=as.character(moodList[,6])), FUN=mean)
moodList_aggregate_user<- moodList_aggregate[moodList_aggregate$id== toString(user),]
moodList_aggregate_user$day <- as.Date(moodList_aggregate_user$day)
print(paste("the user is", user))
print(ggplot(moodList_aggregate_user,aes(x=day, y=x,group = 1))+geom_line() + expand_limits(y = 0)+
geom_point() + labs(x="Day", y = "Mood")+scale_x_date(date_labels = "%b-%Y",  date_breaks="1 month"))
fulldata <- data.frame(seq(min(moodList_aggregate_user$day), max(moodList_aggregate_user$day), by="1 day"))
colnames(fulldata) <- "day"
moodList_aggregate_user <- merge(fulldata, moodList_aggregate_user, by=c("day"), all.x=TRUE)
moodList_aggregate_user$weekday<-weekdays(moodList_aggregate_user$day)
moodList_aggregate_user$weekend <- ifelse(weekdays(moodList_aggregate_user$day) %in% c("zaterdag", "zondag"), "weekend", "weekday")
moodList_aggregate_user$id <- user
for(i in 1:nrow(moodList_aggregate_user))
{
if (is.na(moodList_aggregate_user$x[i]))
{
if(!is.na(moodList_aggregate_user$x[i-1]) & !is.na(moodList_aggregate_user$x[i+1])) {
moodList_aggregate_user$x[i] <- (moodList_aggregate_user$x[i-1] + moodList_aggregate_user$x[i+1])/2
# print(paste("insert",i))
}
if(is.na(moodList_aggregate_user$x[i-1]) | is.na(moodList_aggregate_user$x[i+1]) ){
# print(paste("split komt eraan ",i))
if(!is.na(moodList_aggregate_user$x[i+1]) & i!=41){
moodList_aggregate_user <- moodList_aggregate_user[-c(1:i), ]
print("split")
#   print(paste("split komt eraan ",i))
# }
#   else{
#     if(i<nrow(moodList_aggregate_user)/2){
#       moodList_aggregate_user <- moodList_aggregate_user[-c(1:i), ]
#     }
#     else{
#       moodList_aggregate_user <- moodList_aggregate_user[-c(:nrow(moodList_aggregate_user)), ]
#     }
#   }
}
if(!is.na(moodList_aggregate_user$x[i+1]) & i==41){
moodList_aggregate_user <- moodList_aggregate_user[-c(40:nrow(moodList_aggregate_user)), ]
print("split")
}
}
}
}
for(i in 1:nrow(moodList_aggregate_user))
{
if (is.na(moodList_aggregate_user$x[i]))
{
moodList_aggregate_user$x[i] <- (moodList_aggregate_user$x[i-1] + moodList_aggregate_user$x[i+1])/2
}
}
station <- adf.test(moodList_aggregate_user$x, alternative = "stationary", k=0)
print(paste("pvalue,",station$p.value))
stationary[length(stationary)+1] <- station$p.value
#x=ur.df(moodList_aggregate_user$x,type="drift",selectlags = "AIC")
#print(summary(x))
count_d1 = diff(moodList_aggregate_user$x, differences = 1)
#plot(count_d1)
#station1 <-adf.test(count_d1, alternative = "stationary")
#stationary[length(stationary)+1] <- station1$p.value
Acf(count_d1, main='ACF for Differenced Series')
Pacf(count_d1, main='PACF for Differenced Series')
model <- auto.arima(moodList_aggregate_user$x,d = 1)
print(model)
require(forecast)
serie <- c()
serie <- moodList_aggregate_user$x
series <- list()
series[[1]] <- ts(serie, frequency=7)
holdout <- round(length(moodList_aggregate_user$x)*0.10)
forecasts <- lapply(series,function(foo) {
subseries <- ts(head(foo,length(foo)-holdout),start=start(foo),frequency=frequency(foo))
forecast(auto.arima(subseries, d=1),h=holdout)
})
result <- mapply(FUN=accuracy,f=forecasts,x=series,SIMPLIFY=FALSE)
print(sapply(result,"[","Test set","RMSE"))
scatterresult[length(scatterresult)+1]=sapply(result,"[","Test set","RMSE")
require(forecast)
serie <- c()
serie <- moodList_aggregate_user$x
series <- list()
series[[1]] <- ts(serie, frequency=7)
holdout <- round(length(moodList_aggregate_user$x)*0.10)
forecasts <- lapply(series,function(foo) {
subseries <- ts(head(foo,length(foo)-holdout),start=start(foo),frequency=frequency(foo))
forecast(Arima(subseries, order = c(1,0,1)),h=holdout)
})
result <- mapply(FUN=accuracy,f=forecasts,x=series,SIMPLIFY=FALSE)
print(sapply(result,"[","Test set","RMSE"))
scatterresult[length(scatterresult)+1]=sapply(result,"[","Test set","RMSE")
serie <- moodList_aggregate_user$x
series <- list()
series[[1]] <- ts(serie, frequency=7)
holdout <- round(length(moodList_aggregate_user$x)*0.10)
forecasts <- lapply(series,function(foo) {
subseries <- ts(head(foo,length(foo)-holdout),start=start(foo),frequency=frequency(foo))
forecast(Arima(subseries, order = c(2,0,1)),h=holdout)
})
result <- mapply(FUN=accuracy,f=forecasts,x=series,SIMPLIFY=FALSE)
print(sapply(result,"[","Test set","RMSE"))
scatterresult[length(scatterresult)+1]=sapply(result,"[","Test set","RMSE")
require(forecast)
serie <- c()
serie <- moodList_aggregate_user$x
series <- list()
series[[1]] <- ts(serie, frequency=7)
holdout <- round(length(moodList_aggregate_user$x)*0.10)
forecasts <- lapply(series,function(foo) {
subseries <- ts(head(foo,length(foo)-holdout),start=start(foo),frequency=frequency(foo))
forecast(Arima(subseries, order = c(2,0,2)),h=holdout)
})
result <- mapply(FUN=accuracy,f=forecasts,x=series,SIMPLIFY=FALSE)
print(sapply(result,"[","Test set","RMSE"))
scatterresult[length(scatterresult)+1]=sapply(result,"[","Test set","RMSE")
require(forecast)
serie <- c()
serie <- moodList_aggregate_user$x
series <- list()
series[[1]] <- ts(serie, frequency=7)
holdout <- round(length(moodList_aggregate_user$x)*0.10)
forecasts <- lapply(series,function(foo) {
subseries <- ts(head(foo,length(foo)-holdout),start=start(foo),frequency=frequency(foo))
forecast(Arima(subseries, order = c(3,0,1)),h=holdout)
})
result <- mapply(FUN=accuracy,f=forecasts,x=series,SIMPLIFY=FALSE)
print(sapply(result,"[","Test set","RMSE"))
scatterresult[length(scatterresult)+1]=sapply(result,"[","Test set","RMSE")
require(forecast)
serie <- c()
serie <- moodList_aggregate_user$x
series <- list()
series[[1]] <- ts(serie, frequency=7)
holdout <- round(length(moodList_aggregate_user$x)*0.10)
forecasts <- lapply(series,function(foo) {
subseries <- ts(head(foo,length(foo)-holdout),start=start(foo),frequency=frequency(foo))
forecast(Arima(subseries, order = c(3,0,2)),h=holdout)
})
result <- mapply(FUN=accuracy,f=forecasts,x=series,SIMPLIFY=FALSE)
print(sapply(result,"[","Test set","RMSE"))
scatterresult[length(scatterresult)+1]=sapply(result,"[","Test set","RMSE")
require(forecast)
serie <- c()
serie <- moodList_aggregate_user$x
series <- list()
series[[1]] <- ts(serie, frequency=7)
holdout <- round(length(moodList_aggregate_user$x)*0.10)
forecasts <- lapply(series,function(foo) {
subseries <- ts(head(foo,length(foo)-holdout),start=start(foo),frequency=frequency(foo))
forecast(Arima(subseries, order = c(3,0,3)),h=holdout)
})
result <- mapply(FUN=accuracy,f=forecasts,x=series,SIMPLIFY=FALSE)
print(sapply(result,"[","Test set","RMSE"))
scatterresult[length(scatterresult)+1]=sapply(result,"[","Test set","RMSE")
require(forecast)
serie <- c()
serie <- moodList_aggregate_user$x
series <- list()
series[[1]] <- ts(serie, frequency=7)
holdout <- round(length(moodList_aggregate_user$x)*0.10)
forecasts <- lapply(series,function(foo) {
subseries <- ts(head(foo,length(foo)-holdout),start=start(foo),frequency=frequency(foo))
forecast(Arima(subseries, order = c(3,0,0)),h=holdout)
})
result <- mapply(FUN=accuracy,f=forecasts,x=series,SIMPLIFY=FALSE)
print(sapply(result,"[","Test set","RMSE"))
scatterresult[length(scatterresult)+1]=sapply(result,"[","Test set","RMSE")
require(forecast)
serie <- c()
serie <- moodList_aggregate_user$x
series <- list()
series[[1]] <- ts(serie, frequency=7)
holdout <- round(length(moodList_aggregate_user$x)*0.10)
forecasts <- lapply(series,function(foo) {
subseries <- ts(head(foo,length(foo)-holdout),start=start(foo),frequency=frequency(foo))
forecast(Arima(subseries, order = c(5,0,0)),h=holdout)
})
result <- mapply(FUN=accuracy,f=forecasts,x=series,SIMPLIFY=FALSE)
print(sapply(result,"[","Test set","RMSE"))
scatterresult[length(scatterresult)+1]=sapply(result,"[","Test set","RMSE")
require(forecast)
serie <- c()
serie <- moodList_aggregate_user$x
series <- list()
series[[1]] <- ts(serie, frequency=7)
holdout <- round(length(moodList_aggregate_user$x)*0.10)
forecasts <- lapply(series,function(foo) {
subseries <- ts(head(foo,length(foo)-holdout),start=start(foo),frequency=frequency(foo))
forecast(Arima(subseries, order = c(1,0,5)),h=holdout)
})
result <- mapply(FUN=accuracy,f=forecasts,x=series,SIMPLIFY=FALSE)
print(sapply(result,"[","Test set","RMSE"))
scatterresult[length(scatterresult)+1]=sapply(result,"[","Test set","RMSE")
require(forecast)
serie <- c()
serie <- moodList_aggregate_user$x
series <- list()
series[[1]] <- ts(serie, frequency=7)
holdout <- round(length(moodList_aggregate_user$x)*0.10)
forecasts <- lapply(series,function(foo) {
subseries <- ts(head(foo,length(foo)-holdout),start=start(foo),frequency=frequency(foo))
forecast(Arima(subseries, order = c(1,0,3)),h=holdout)
})
result <- mapply(FUN=accuracy,f=forecasts,x=series,SIMPLIFY=FALSE)
print(sapply(result,"[","Test set","RMSE"))
scatterresult[length(scatterresult)+1]=sapply(result,"[","Test set","RMSE")
print(model)
require(forecast)
serie <- c()
serie <- moodList_aggregate_user$x
series <- list()
series[[1]] <- ts(serie, frequency=7)
holdout <- round(length(moodList_aggregate_user$x)*0.10)
forecasts <- lapply(series,function(foo) {
subseries <- ts(head(foo,length(foo)-holdout),start=start(foo),frequency=frequency(foo))
forecast(Arima(subseries, order = c(3,0,3)),h=holdout)
})
result <- mapply(FUN=accuracy,f=forecasts,x=series,SIMPLIFY=FALSE)
print(sapply(result,"[","Test set","RMSE"))
scatterresult[length(scatterresult)+1]=sapply(result,"[","Test set","RMSE")
require(forecast)
serie <- c()
serie <- moodList_aggregate_user$x
series <- list()
series[[1]] <- ts(serie, frequency=7)
holdout <- round(length(moodList_aggregate_user$x)*0.10)
forecasts <- lapply(series,function(foo) {
subseries <- ts(head(foo,length(foo)-holdout),start=start(foo),frequency=frequency(foo))
forecast(Arima(subseries, order = c(5,0,3)),h=holdout)
})
result <- mapply(FUN=accuracy,f=forecasts,x=series,SIMPLIFY=FALSE)
print(sapply(result,"[","Test set","RMSE"))
scatterresult[length(scatterresult)+1]=sapply(result,"[","Test set","RMSE")
scatterresult
model <- auto.arima(moodList_aggregate_user$x,d = 1)
print(model)
require(forecast)
serie <- c()
serie <- moodList_aggregate_user$x
series <- list()
series[[1]] <- ts(serie, frequency=7)
holdout <- round(length(moodList_aggregate_user$x)*0.10)
forecasts <- lapply(series,function(foo) {
subseries <- ts(head(foo,length(foo)-holdout),start=start(foo),frequency=frequency(foo))
forecast(auto.arima(subseries,d=1),h=holdout)
})
result <- mapply(FUN=accuracy,f=forecasts,x=series,SIMPLIFY=FALSE)
print(sapply(result,"[","Test set","RMSE"))
scatterresult[length(scatterresult)+1]=sapply(result,"[","Test set","RMSE")
require(forecast)
serie <- c()
serie <- moodList_aggregate_user$x
series <- list()
series[[1]] <- ts(serie, frequency=7)
holdout <- round(length(moodList_aggregate_user$x)*0.10)
forecasts <- lapply(series,function(foo) {
subseries <- ts(head(foo,length(foo)-holdout),start=start(foo),frequency=frequency(foo))
forecast(auto.arima(subseries,d=2),h=holdout)
})
result <- mapply(FUN=accuracy,f=forecasts,x=series,SIMPLIFY=FALSE)
print(sapply(result,"[","Test set","RMSE"))
scatterresult[length(scatterresult)+1]=sapply(result,"[","Test set","RMSE")
require(forecast)
serie <- c()
serie <- moodList_aggregate_user$x
series <- list()
series[[1]] <- ts(serie, frequency=7)
holdout <- round(length(moodList_aggregate_user$x)*0.10)
forecasts <- lapply(series,function(foo) {
subseries <- ts(head(foo,length(foo)-holdout),start=start(foo),frequency=frequency(foo))
forecast(auto.arima(subseries,d=0),h=holdout)
})
result <- mapply(FUN=accuracy,f=forecasts,x=series,SIMPLIFY=FALSE)
print(sapply(result,"[","Test set","RMSE"))
scatterresult[length(scatterresult)+1]=sapply(result,"[","Test set","RMSE")
forecasts
users <- c("AS14.01", "AS14.17", "AS14.08", "AS14.13", "AS14.16", "AS14.05", "AS14.15", "AS14.12", "AS14.02", "AS14.07", "AS14.14", "AS14.20", "AS14.30", "AS14.03","AS14.09", "AS14.19", "AS14.23", "AS14.26", "AS14.06", "AS14.28", "AS14.32", "AS14.29", "AS14.27", "AS14.25", "AS14.24", "AS14.33", "AS14.31")
p <- c()
scatterresult <- c()
stationary <- c()
for (user in users){
moodList_aggregate<-aggregate(x=moodList[,5],by=list(id=moodList[,2] , day=as.character(moodList[,6])), FUN=mean)
moodList_aggregate_user<- moodList_aggregate[moodList_aggregate$id== toString(user),]
moodList_aggregate_user$day <- as.Date(moodList_aggregate_user$day)
print(paste("the user is", user))
print(ggplot(moodList_aggregate_user,aes(x=day, y=x,group = 1))+geom_line() + expand_limits(y = 0)+
geom_point() + labs(x="Day", y = "Mood")+scale_x_date(date_labels = "%b-%Y",  date_breaks="1 month"))
fulldata <- data.frame(seq(min(moodList_aggregate_user$day), max(moodList_aggregate_user$day), by="1 day"))
colnames(fulldata) <- "day"
moodList_aggregate_user <- merge(fulldata, moodList_aggregate_user, by=c("day"), all.x=TRUE)
moodList_aggregate_user$weekday<-weekdays(moodList_aggregate_user$day)
moodList_aggregate_user$weekend <- ifelse(weekdays(moodList_aggregate_user$day) %in% c("zaterdag", "zondag"), "weekend", "weekday")
moodList_aggregate_user$id <- user
for(i in 1:nrow(moodList_aggregate_user))
{
if (is.na(moodList_aggregate_user$x[i]))
{
if(!is.na(moodList_aggregate_user$x[i-1]) & !is.na(moodList_aggregate_user$x[i+1])) {
moodList_aggregate_user$x[i] <- (moodList_aggregate_user$x[i-1] + moodList_aggregate_user$x[i+1])/2
# print(paste("insert",i))
}
if(is.na(moodList_aggregate_user$x[i-1]) | is.na(moodList_aggregate_user$x[i+1]) ){
# print(paste("split komt eraan ",i))
if(!is.na(moodList_aggregate_user$x[i+1]) & i!=41){
moodList_aggregate_user <- moodList_aggregate_user[-c(1:i), ]
print("split")
#   print(paste("split komt eraan ",i))
# }
#   else{
#     if(i<nrow(moodList_aggregate_user)/2){
#       moodList_aggregate_user <- moodList_aggregate_user[-c(1:i), ]
#     }
#     else{
#       moodList_aggregate_user <- moodList_aggregate_user[-c(:nrow(moodList_aggregate_user)), ]
#     }
#   }
}
if(!is.na(moodList_aggregate_user$x[i+1]) & i==41){
moodList_aggregate_user <- moodList_aggregate_user[-c(40:nrow(moodList_aggregate_user)), ]
print("split")
}
}
}
}
for(i in 1:nrow(moodList_aggregate_user))
{
if (is.na(moodList_aggregate_user$x[i]))
{
moodList_aggregate_user$x[i] <- (moodList_aggregate_user$x[i-1] + moodList_aggregate_user$x[i+1])/2
}
}
station <- adf.test(moodList_aggregate_user$x, alternative = "stationary", k=0)
print(paste("pvalue,",station$p.value))
stationary[length(stationary)+1] <- station$p.value
#x=ur.df(moodList_aggregate_user$x,type="drift",selectlags = "AIC")
#print(summary(x))
count_d1 = diff(moodList_aggregate_user$x, differences = 1)
#plot(count_d1)
#station1 <-adf.test(count_d1, alternative = "stationary")
#stationary[length(stationary)+1] <- station1$p.value
Acf(count_d1, main='ACF for Differenced Series')
Pacf(count_d1, main='PACF for Differenced Series')
model <- auto.arima(moodList_aggregate_user$x,d = 1)
print(model)
require(forecast)
serie <- c()
serie <- moodList_aggregate_user$x
series <- list()
series[[1]] <- ts(serie, frequency=7)
holdout <- round(length(moodList_aggregate_user$x)*0.10)
forecasts <- lapply(series,function(foo) {
subseries <- ts(head(foo,length(foo)-holdout),start=start(foo),frequency=frequency(foo))
forecast(auto.arima(subseries,d=0),h=holdout)
})
result <- mapply(FUN=accuracy,f=forecasts,x=series,SIMPLIFY=FALSE)
print(sapply(result,"[","Test set","RMSE"))
scatterresult[length(scatterresult)+1]=sapply(result,"[","Test set","RMSE")
}
hist(scatterresult,
main="RMSE of the linear regression",
xlab="RMSE",
border="black",
col="red",
xlim=c(0.0,1.4),
las=1,
breaks=9)
}
mean(scatterresult)
meidan(scatterresult)
median(scatterresult)
hist(scatterresult,
main="RMSE of the linear regression",
xlab="RMSE",
border="black",
col="red",
xlim=c(0.0,1.4),
las=1,
breaks=15)
}
hist(scatterresult,
main="RMSE of the linear regression",
xlab="RMSE",
border="black",
col="red",
xlim=c(0.0,1.4),
las=1,
breaks=10)
}
hist(scatterresult,
main="RMSE of the linear regression",
xlab="RMSE",
border="black",
col="red",
xlim=c(0.0,1.4),
las=1,
breaks=9)
hist(scatterresult,
main="RMSE of the ARIMA regression",
xlab="RMSE",
border="black",
col="red",
xlim=c(0.0,1.4),
las=1,
breaks=9)
mean(scatterresult)
median(scatterresult)
max(scatterresult)
